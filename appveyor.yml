image:
- Visual Studio 2017
- Ubuntu
version: 1.0.{build}
configuration: Release
skip_branch_with_pr: true
assembly_info:
  patch: true
  file: AntlrGrammarEditor\AssemblyInfo.cs;
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'
before_build:
- ps: |
    python2 -V

    python3 -V

    node -v

    go version
build_script:
- ps: |
    if ($isWindows) {
        C:\Python27-x64\Scripts\pip.exe install antlr4-python2-runtime

        C:\Python35-x64\Scripts\pip.exe install antlr4-python3-runtime
    } else {
        sudo pip2 install antlr4-python2-runtime
    }

    npm install antlr4

    go get github.com/antlr/antlr4/runtime/Go/antlr

    dotnet build AntlrGrammarEditor.sln -c Release

    dotnet publish DesktopAntlrGrammarEditor/DesktopAntlrGrammarEditor.csproj -c Release -o bin/Gui
test_script:
- ps: |
    cd AntlrGrammarEditor.Tests/bin/Release/netcoreapp2.1

    dotnet vstest AntlrGrammarEditor.Tests.dll --logger:nunit

    $wc = New-Object 'System.Net.WebClient'

    $wc.UploadFile("https://ci.appveyor.com/api/testresults/nunit/$env:APPVEYOR_JOB_ID", (Resolve-Path ./AntlrGrammarEditor.Tests/bin/Release/netcoreapp2.1/TestResults/TestResults.xml))
after_test:
- ps: |
    cd DesktopAntlrGrammarEditor/bin/Gui

    7z a DAGE-$env:APPVEYOR_BUILD_VERSION.zip *.dll *.config *.json runtimes generators

    Push-AppveyorArtifact DAGE-$env:APPVEYOR_BUILD_VERSION.zip